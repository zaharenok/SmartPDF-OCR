# SmartPDF-OCR Makefile

.PHONY: help install install-dev test clean lint format check setup example

# Default target
help:
	@echo "SmartPDF-OCR - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo ""
	@echo "setup          - –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "install        - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
	@echo "install-dev    - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "test           - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
	@echo "lint           - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ (flake8)"
	@echo "format         - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ (black)"
	@echo "check          - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ (mypy)"
	@echo "example        - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤"
	@echo "clean          - –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
	@echo "run            - –ó–∞–ø—É—Å–∫ —Å —Ç–µ—Å—Ç–æ–≤—ã–º PDF"
	@echo ""

# –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
setup: install
	@echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo ""
	@echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
	@echo "  python main.py your_document.pdf"
	@echo ""
	@echo "–ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã:"
	@echo "  make example"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install:
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	pip install -r requirements.txt

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
install-dev: install
	@echo "üõ†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	pip install pytest pytest-cov black flake8 mypy

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (–∫–æ–≥–¥–∞ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã)
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	@if [ -d "tests" ]; then \
		python -m pytest tests/ -v; \
	else \
		echo "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è tests –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞."; \
	fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
lint:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
	flake8 *.py --max-line-length=100 --ignore=E203,W503

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
format:
	@echo "‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	black *.py --line-length=100

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
check:
	@echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤..."
	mypy *.py --ignore-missing-imports

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤
example:
	@echo "üìö –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è..."
	python example_usage.py

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	rm -rf __pycache__/
	rm -rf *.pyc
	rm -rf .pytest_cache/
	rm -rf .mypy_cache/
	rm -rf output/
	rm -rf temp/
	rm -rf cache/
	rm -rf *.log
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å —Ç–µ—Å—Ç–æ–≤—ã–º PDF
run:
	@echo "üèÉ –ó–∞–ø—É—Å–∫ SmartPDF-OCR..."
	@if [ -f "test.pdf" ]; then \
		python main.py test.pdf --verbose; \
	else \
		echo "‚ùå –§–∞–π–ª test.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω."; \
		echo "   –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π PDF —Ñ–∞–π–ª –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å:"; \
		echo "   python main.py –ø—É—Ç—å/–∫/–≤–∞—à–µ–º—É/—Ñ–∞–π–ª—É.pdf"; \
	fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ PDF (—Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫)
create-test-pdf:
	@echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ PDF..."
	@python -c "
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter
import os

if not os.path.exists('test.pdf'):
    c = canvas.Canvas('test.pdf', pagesize=letter)
    c.drawString(100, 750, '–¢–µ—Å—Ç–æ–≤—ã–π PDF –¥–æ–∫—É–º–µ–Ω—Ç')
    c.drawString(100, 700, '–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 - –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç')
    c.drawString(100, 650, '–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SmartPDF-OCR')
    c.showPage()
    c.drawString(100, 750, '–°—Ç—Ä–∞–Ω–∏—Ü–∞ 2 - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç')
    c.drawString(100, 700, '–ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
    c.save()
    print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π PDF —Å–æ–∑–¥–∞–Ω: test.pdf')
else:
    print('‚ÑπÔ∏è  –§–∞–π–ª test.pdf —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
" 2>/dev/null || echo "‚ö†Ô∏è  –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ PDF —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install reportlab"

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞
status:
	@echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞ SmartPDF-OCR:"
	@echo ""
	@echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤:"
	@ls -la *.py | head -10
	@echo ""
	@echo "üì¶ Python –≤–µ—Ä—Å–∏—è:"
	@python --version
	@echo ""
	@echo "üìã –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
	@pip list | grep -E "(PyMuPDF|pytesseract|easyocr|Pillow)" || echo "‚ö†Ô∏è  –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ–≥–æ
check-all: lint check
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!"